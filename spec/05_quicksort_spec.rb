require_relative '../lib/quicksort.rb'

describe "Quicksort" do

  let (:unsorted_array_1) { [5,3,4,1,2,0] }
  
  let (:unsorted_array_2) { [0,4,7,5,4,7,8,342,8,5,2,1,5,78,5,7,9,10] }

  let(:unsorted_array_3) { [953, 843, 626, 155, 45, 804, 202, 375, 991, 23, 888, 560, 690, 248, 610, 956, 920, 262, 6, 457, 985, 574, 157, 228, 324, 185, 164, 792, 615, 131, 731, 468, 490, 153, 663, 737, 94, 162, 766, 855, 647, 27, 949, 4, 399, 190, 219, 341, 802, 921, 620, 304, 691, 898, 429, 533, 769, 982, 889, 137, 204, 231, 385, 292, 573, 477, 274, 797, 809, 644, 177, 728, 258, 257, 710, 916, 181, 968, 5, 426, 70, 121, 56, 997, 530, 852, 465, 972, 415, 234, 300, 109, 775, 683, 828, 606, 658, 950, 720, 646, 213, 764, 504, 489, 448, 328, 874, 372, 670, 410, 416, 251, 270, 935, 467, 540, 758, 361, 149, 973, 865, 340, 643, 199, 872, 134, 976, 378, 430, 978, 659, 132, 649, 686, 47, 676, 254, 552, 592, 344, 579, 914, 450, 704, 844, 959, 507, 777, 572, 60, 751, 499, 240, 528, 126, 881, 641, 944, 307, 475, 771, 61, 566, 59, 609, 767, 122, 464, 729, 800, 3, 740, 819, 409, 290, 225, 824, 476, 19, 220, 524, 707, 812, 179, 741, 666, 222, 853, 166, 491, 600, 161, 604, 209, 565, 576, 449, 29, 461, 512, 929, 912, 8, 38, 791, 124, 698, 382, 329, 746, 301, 492, 15, 712, 612, 65, 100, 755, 971, 986, 308, 957, 518, 822, 386, 838, 17, 759, 379, 471, 75, 743, 104, 813, 233, 787, 13, 237, 118, 711, 247, 619, 664, 418, 597, 678, 734, 368, 37, 878, 654, 496, 105, 803, 110, 264, 963, 893, 74, 696, 717, 651, 770, 413, 148, 894, 454, 466, 545, 884, 946, 899, 725, 977, 146, 140, 16, 242, 178, 752, 393, 886, 983, 500, 934, 692, 941, 948, 557, 343, 753, 931, 58, 67, 18, 987, 423, 867, 303, 263, 780, 143, 897, 733, 887, 631, 469, 349, 412, 55, 367, 635, 954, 857, 536, 12, 232, 391, 938, 11, 891, 509, 761, 607, 139, 999, 271, 805, 187, 561, 388, 520, 842, 498, 833, 906, 63, 481, 72, 639, 313, 952, 473, 326, 193, 795, 432, 355, 31, 541, 182, 495, 636, 279, 681, 829, 908, 789, 96, 144, 922, 750, 483, 564, 49, 436, 411, 316, 880, 903, 277, 569, 801, 354, 192, 757, 312, 127, 152, 26, 128, 793, 774, 870, 703, 398, 673, 799, 211, 726, 735, 568, 119, 559, 522, 585, 342, 30, 648, 652, 817, 446, 77, 841, 760, 811, 170, 623, 458, 721, 776, 988, 376, 297, 918, 358, 40, 472, 289, 406, 688, 923, 677, 337, 907, 966, 377, 245, 958, 221, 567, 668, 732, 259, 419, 338, 68, 618, 601, 582, 244, 444, 175, 591, 816, 590, 624, 915, 693, 715, 460, 608, 653, 902, 359, 168, 680, 482, 253, 697, 684, 2, 345, 474, 154, 293, 955, 417, 394, 92, 294, 595, 484, 334, 510, 583, 408, 821, 538, 765, 587, 835, 876, 440, 638, 689, 470, 50, 984, 305, 890, 356, 547, 772, 964, 995, 216, 392, 276, 485, 266, 960, 487, 261, 613, 625, 462, 779, 133, 69, 383, 34, 318, 283, 848, 836, 227, 970, 173, 928, 503, 400, 695, 267, 82, 54, 229, 120, 363, 580, 98, 785, 184, 660, 360, 280, 84, 370, 599, 141, 722, 255, 323, 189, 252, 384, 57, 981, 201, 701, 33, 390, 839, 453, 493, 373, 224, 347, 95, 321, 581, 723, 123, 73, 798, 442, 756, 667, 796, 709, 281, 831, 527, 736, 369, 854, 719, 744, 925, 699, 459, 217, 856, 718, 627, 317, 90, 901, 851, 268, 539, 832, 739, 632, 85, 873, 617, 633, 114, 463, 933, 708, 546, 346, 998, 205, 401, 965, 951, 558, 762, 42, 10, 895, 577, 724, 868, 83, 508, 529, 554, 980, 526, 502, 331, 945, 806, 414, 250, 81, 763, 713, 849, 86, 88, 62, 402, 1, 335, 655, 183, 117, 167, 102, 550, 428, 614, 640, 942, 705, 551, 451, 374, 439, 371, 570, 424, 309, 52, 605, 36, 322, 548, 501, 511, 246, 847, 230, 397, 188, 927, 46, 630, 669, 862, 238, 645, 992, 278, 396, 288, 513, 191, 562, 236, 714, 138, 794, 534, 486, 226, 214, 427, 207, 962, 589, 885, 864, 517, 433, 296, 169, 434, 206, 861, 748, 435, 111, 818, 186, 661, 43, 302, 556, 679, 598, 904, 336, 866, 594, 380, 869, 89, 883, 298, 287, 629, 919, 506, 160, 21, 203, 706, 900, 311, 837, 924, 362, 909, 112, 93, 939, 28, 299, 22, 403, 930, 241, 593, 488, 877, 937, 602, 702, 332, 575, 879, 325, 365, 810, 310, 272, 850, 917, 239, 198, 515, 319, 53, 514, 291, 749, 782, 535, 505, 366, 64, 381, 892, 913, 364, 588, 327, 437, 814, 351, 578, 210, 642, 196, 80, 314, 32, 947, 549, 125, 823, 353, 825, 656, 171, 990, 989, 637, 555, 158, 745, 940, 387, 494, 71, 260, 531, 674, 969, 628, 223, 172, 407, 35, 738, 129, 584, 542, 286, 611, 586, 682, 694, 339, 200, 730, 265, 932, 974, 235, 671, 165, 742, 537, 174, 333, 348, 478, 936, 786, 634, 79, 420, 106, 76, 543, 249, 87, 39, 672, 961, 41, 519, 455, 97, 176, 425, 350, 994, 103, 159, 896, 525, 840, 863, 830, 650, 871, 781, 243, 44, 456, 675, 875, 389, 657, 665, 107, 101, 24, 846, 447, 108, 315, 596, 194, 943, 807, 285, 135, 860, 993, 142, 754, 136, 66, 115, 858, 532, 443, 521, 150, 116, 603, 790, 783, 282, 421, 352, 431, 195, 51, 773, 979, 295, 197, 967, 479, 563, 778, 395, 441, 975, 273, 147, 91, 7, 727, 215, 320, 622, 151, 404, 820, 926, 156, 275, 357, 1000, 497, 905, 330, 480, 553, 845, 445, 212, 145, 113, 516, 716, 452, 616, 218, 130, 20, 208, 826, 834, 78, 700, 25, 99, 911, 808, 910, 48, 180, 621, 14, 996, 788, 544, 269, 882, 306, 571, 405, 784, 768, 815, 747, 827, 523, 163, 256, 9, 438, 284, 422, 859, 662, 685, 687] }
  
  context 'the sorting algorithm' do

    it 'can sort a simple array of 6 numbers' do
      expect(Quicksort.new(unsorted_array_1).solve).to eq(unsorted_array_1.sort)
    end

    it 'can sort a bigger array' do
      expect(Quicksort.new(unsorted_array_2).solve).to eq(unsorted_array_2.sort)
    end

    it 'can quickly sort an array of 1000 integers' do
      expect(Quicksort.new(unsorted_array_3).solve).to eq(unsorted_array_3.sort)
    end

  end
end

